using DevExpress.DataAccess.Sql;
using DevExpress.XtraEditors;
using DevExpress.XtraGrid.EditForm.Helpers.Controls;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using TOP.lib;

namespace TOP.Dialog
{
    public partial class frmScrnInfo : TOP.Parent.PForm
    {
        bool b_Insert;

        public frmScrnInfo()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously
            b_Insert = false;
        }

        //화면정보를 조회한다.
        private void simpleButton2_Click(object sender, EventArgs e)
        {
            SqlQuery query = sqlDataSource1.Queries["QRY_SCRN_INFO"];
            try
            {


                foreach (QueryParameter item in sqlDataSource1.Queries["QRY_SCRN_INFO"].Parameters)
                {
                    if (item.Name == "P_SCRN_SRC")
                    {
                        item.Value = edtScrnSrc.Text;
                    }
                    else if (item.Name == "P_SCRN_TEXT")
                    {
                        item.Value = edtScrnText.Text;
                    }


                }

                sqlDataSource1.Fill("QRY_SCRN_INFO");

                DataTable dt = CUtil.GetTable(sqlDataSource1.Result["QRY_SCRN_INFO"]);

                gridScrnInfo.DataSource = dt;
             
            }
            catch (Exception ex)
            {

                //InfoMsg.Caption = ex.Message;
            }

            //UserId = edtID.Text;
            //DialogResult = DialogResult.OK;

        }


        //신규등록을 처리한다.
        private void simpleButton1_Click(object sender, EventArgs e)
        {
            b_Insert = true;

            gridView1.AddNewRow();
            gridView1.ShowEditForm();
        }

        private void gridView1_ShowingPopupEditForm(object sender, DevExpress.XtraGrid.Views.Grid.ShowingPopupEditFormEventArgs e)
        {
            foreach (Control control in e.EditForm.Controls)
            {
                if (!(control is EditFormContainer))
                {
                    continue;
                }
                foreach (Control nestedControl in control.Controls)
                {
                    if (!(nestedControl is PanelControl))
                    {
                        continue;
                    }
                    foreach (Control button in nestedControl.Controls)
                    {
                        if (!(button is SimpleButton))
                        {
                            continue;
                        }
                        var simpleButton = button as SimpleButton;
                        simpleButton.Click -= editFormUpdateButton_Click;
                        simpleButton.Click += editFormUpdateButton_Click;
                    }
                }
            }
        }


        private void editFormUpdateButton_Click(object sender, EventArgs e)
        {
            DataRow dr = gridView1.GetFocusedDataRow();

            try
            {

                if (b_Insert)
                {
                    //insert 버튼으로 열었으면 신규 추가를 시도하고

                    sqlDataSource1.Queries["INSERT_SCRN_INFO"].Parameters.Find(x => x.Name == "P_SCRN_SRC").Value = dr["SCRN_SRC"].ToString();
                    sqlDataSource1.Queries["INSERT_SCRN_INFO"].Parameters.Find(x => x.Name == "P_SCRN_TEXT").Value = dr["SCRN_TEXT"].ToString();
                    sqlDataSource1.Queries["INSERT_SCRN_INFO"].Parameters.Find(x => x.Name == "P_SCRN_DESC").Value = dr["SCRN_DESC"].ToString();


                    SqlDataSource.DisableCustomQueryValidation = true;

                    sqlDataSource1.Fill("INSERT_SCRN_INFO");
                }
                else
                {
                    //아닌 경우는 Update로 간주한다.

                    sqlDataSource1.Queries["UPDATE_SCRN_INFO"].Parameters.Find(x => x.Name == "P_SCRN_SRC").Value = dr["SCRN_SRC"].ToString();
                    sqlDataSource1.Queries["UPDATE_SCRN_INFO"].Parameters.Find(x => x.Name == "P_SCRN_TEXT").Value = dr["SCRN_TEXT"].ToString();
                    sqlDataSource1.Queries["UPDATE_SCRN_INFO"].Parameters.Find(x => x.Name == "P_SCRN_DESC").Value = dr["SCRN_DESC"].ToString();
               
                    SqlDataSource.DisableCustomQueryValidation = true;

                    sqlDataSource1.Fill("UPDATE_SCRN_INFO");
                }

            }
            catch (Exception ex)
            {

                MsgCaption.Caption = ex.InnerException.InnerException.InnerException.Message;
            }
            finally
            {
                b_Insert = false;
            }

        }
    }
}
